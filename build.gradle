buildscript {
    ext {
        springBootVersion = '3.2.12'
        springCloudVersion = '2023.0.3'
        springCloudAlibabaVersion = '2023.0.3.2'
        mapStructVersion = '1.5.5.Final'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    group = 'com.tsengfhy.elaphure'
    version = '1.0.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        compileOnly "org.projectlombok:lombok"
        annotationProcessor "org.projectlombok:lombok"
        testCompileOnly "org.projectlombok:lombok"
        testAnnotationProcessor "org.projectlombok:lombok"
        implementation 'org.mapstruct:mapstruct'
        annotationProcessor 'org.mapstruct:mapstruct-processor'
        testAnnotationProcessor 'org.mapstruct:mapstruct-processor'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
        }

        dependencies {
            dependency "org.mapstruct:mapstruct:${mapStructVersion}"
            dependency "org.mapstruct:mapstruct-processor:${mapStructVersion}"
        }
    }

    test {
        useJUnitPlatform()
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    jar.enabled = true
    bootJar.enabled = false
}
